unbind -a -T prefix
unbind -a -T root
unbind -a -T copy-mode
unbind -a -T copy-mode-vi
set-option -g prefix C-a
bind C-a send-prefix
bind C-r source-file ~/.tmux.conf
bind -T prefix : command-prompt
bind -T prefix d detach-client

# tmux-ssh-split config
set-option -g @ssh-split-keep-cwd "true"
set-option -g @ssh-split-fail "false"
set-option -g @ssh-split-no-shell "false"
set-option -g @ssh-split-strip-cmd "true"
set-option -g @ssh-split-verbose "true"
set-option -g @ssh-split-h-key "|"
set-option -g @ssh-split-v-key "-"

set -g history-limit 50000

# Enable prompt colors
set -g default-terminal "xterm-256color"
source-file "~/.tmux/colors/ayu.conf"

set -g mode-keys vi 

bind -T prefix Space copy-mode
set -g escape-time 1
yank="~/.tmux/yank.sh"

# Copy Mode
bind -T copy-mode-vi C-c send-keys -X cancel
bind -T copy-mode-vi Escape if -F "#{selection_present}" { send -X clear-selection } { send-keys -X cancel }
bind -T copy-mode-vi k send-keys -X cursor-up
bind -T copy-mode-vi j send-keys -X cursor-down
bind -T copy-mode-vi l send-keys -X cursor-right
bind -T copy-mode-vi h send-keys -X cursor-left
bind -T copy-mode-vi w send-keys -X next-word
bind -T copy-mode-vi e send-keys -X next-word-end
bind -T copy-mode-vi b send-keys -X previous-word
bind -T copy-mode-vi B send-keys -X previous-word-end
bind -T copy-mode-vi $ send-keys -X end-of-line
bind -T copy-mode-vi ^ send-keys -X start-of-line

bind -T copy-mode-vi : command-prompt -p "(goto)" "send -X goto-line \"%%%\""
bind -T copy-mode-vi ? command-prompt -p "(search reverse)" "send -X search-backward \"%%%\""
bind -T copy-mode-vi / command-prompt -p "(search forward)" "send -X search-forward \"%%%\""
bind -T copy-mode-vi n send-keys -X search-again
bind -T copy-mode-vi N send-keys -X search-reverse

bind -T copy-mode-vi v      send-keys -X begin-selection
bind -T copy-mode-vi C-v    send-keys -X rectangle-toggle \; send -X begin-selection
bind -T copy-mode-vi y      send-keys -X copy-pipe-and-cancel "$yank"
bind -T copy-mode-vi Enter  send-keys -X copy-selection-no-clear

set -g mouse on

tmux_commands_with_legacy_scroll="nano less more man"

bind-key -T root WheelUpPane \
    if-shell -Ft= '#{?mouse_any_flag,1,#{pane_in_mode}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Up Up Up" "copy-mode -et="'

bind-key -T root WheelDownPane \
    if-shell -Ft = '#{?pane_in_mode,1,#{mouse_any_flag}}' \
        'send -Mt=' \
        'if-shell -t= "#{?alternate_on,true,false} || echo \"#{tmux_commands_with_legacy_scroll}\" | grep -q \"#{pane_current_command}\"" \
            "send -t= Down Down Down" "send -Mt="'
# bind -T root WheelUpPane copy-mode -e
bind -T copy-mode-vi WheelUpPane   send -X -N 5 scroll-up
bind -T copy-mode-vi WheelDownPane send -X -N 5 scroll-down

# > https://github.com/tmux/tmux/issues/140#issuecomment-474341833
# This is very similar to what I have already. One big issue is that
# I can't see any straight forward way to rebind WheelDownPane when
# `copy-mode-vi` is entered into from MouseDrag1Pane. This issue is
# a good place to start when I get bored.
bind -n MouseDrag1Pane copy-mode -M
bind -T copy-mode-vi MouseDrag1Pane    send -X begin-selection
bind -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-no-clear "$yank"
# bind -T copy-mode-vi MouseDown1Pane    send -X clear-selection \; send -X cancel

# Panes
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
#bind -T root C-r command-prompt -p "(resize percentage)" -I 50 "resize-pane -x %1\%"

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TZX]+ +(\S+\/)?(n?vim)$'"

is_fzf="ps -o state= -o comm= -t '#{pane_tty}' \
  | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?fzf$'"

bind -T root C-k if-shell "$is_vim || $is_fzf" "send-keys C-k" "select-pane -U"
bind -T root C-j if-shell "$is_vim || $is_fzf" "send-keys C-j" "select-pane -D"
bind -T root C-h if-shell "$is_vim || $is_fzf" "send-keys C-h" "select-pane -L"
bind -T root C-l if-shell "$is_vim || $is_fzf" "send-keys C-l" "select-pane -R"

bind-key -r -T prefix 	M-Up    	resize-pane -U 5
bind-key -r -T prefix 	M-Down  	resize-pane -D 5
bind-key -r -T prefix 	M-Left  	resize-pane -L 5
bind-key -r -T prefix 	M-Right 	resize-pane -R 5

# Windows
bind -T prefix N new-window
bind -T prefix r last-window
bind -T prefix 0 select-window -t 0
bind -T prefix 1 select-window -t 1
bind -T prefix 2 select-window -t 2
bind -T prefix 3 select-window -t 3
bind -T prefix 4 select-window -t 4
bind -T prefix 5 select-window -t 5
bind -T prefix 6 select-window -t 6
bind -T prefix 7 select-window -t 7
bind -T prefix 8 select-window -t 8
bind -T prefix 9 select-window -t 9

# Setup Plugins
# (if TPM isn't installed: `$ git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm`)
# tmux-ssh-split sets up ssh splitting. Uses fix here (https://github.com/pschmitt/tmux-ssh-split/pull/6)
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'pschmitt/tmux-ssh-split'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
